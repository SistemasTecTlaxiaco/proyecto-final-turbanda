<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACAAIADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7dvrma60m2RnZ/McMwb+FgeDXk1n4bl134p65YxXHkSs0jxuO
        xOw17JqWoacfDt/FnddSbREUPK+prw7wbfT3fxe1/bITtgVgw+ij+lfkFTDRp1aOHl717a+if/D/ADP0
        jCycqVea0sv1R7Lpe1dNSN3MrIoRnPdhwTXKePtaksrNICPkJrqbWzFrEsKH92Bnn1rzH4gatHfa1JZM
        4AjUAfWvuFH2dJRb12PnU+abaNb4eSTXjXFyTtRflWt+3tZptajMr5i3+tZfhO1az0GJFO1yCx9619Jt
        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
        3zPj7xH8I9h/T1r6utJWtI+GoxlJ8y0P/9k=
</value>
  </data>
</root>